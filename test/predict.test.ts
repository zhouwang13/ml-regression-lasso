import { LassoRegression } from '../src';
import { x, y } from './data';

describe('lambda=0', () => {
  it('works', () => {
    const lasso = new LassoRegression(x, y, { lambda: 0 });
    const LeastSquaresSolution = [
      [23.14809106, 0.23148091],
      [23.14809106, 0.23148091],
      [25.14837882, 0.25148379],
      [20.17415595, 0.20174156],
      [15.46423046, 0.1546423],
      [21.29978349, 0.21299783],
      [13.72542478, 0.13725425],
      [24.74402044, 0.2474402],
      [24.10334079, 0.24103341],
      [22.5945383, 0.22594538],
      [22.5945383, 0.22594538],
      [17.89518655, 0.17895187],
      [17.89518655, 0.17895187],
      [17.89518655, 0.17895187],
      [11.32024504, 0.11320245],
      [11.43599955, 0.11436],
      [11.67032386, 0.11670324],
      [26.70820692, 0.26708207],
      [27.14700689, 0.27147007],
      [26.9636787, 0.26963679],
      [24.68182855, 0.24681829],
      [17.35977611, 0.17359776],
      [17.78462398, 0.17784624],
      [14.02888754, 0.14028888],
      [14.25037939, 0.14250379],
      [26.69910304, 0.26699103],
      [24.82479978, 0.248248],
      [25.04304417, 0.25043044],
      [13.52657972, 0.1352658],
      [21.98867993, 0.2198868],
      [13.28024779, 0.13280248],
      [24.35643593, 0.24356436],
    ];
    const yPred = lasso.predict(x);
    expect(yPred.length).toBe(LeastSquaresSolution.length);
    yPred.forEach((row, r) => {
      expect(row.length).toBe(LeastSquaresSolution[r].length);
      row.forEach((wij, c) => {
        expect(wij).toBeCloseTo(LeastSquaresSolution[r][c]);
      });
    });
  });
});
